//
//  DataCloudEvent.swift
//  ProntoFoodDeliveryApp
//
//  Core event protocol and base structures for Salesforce Data Cloud events
//  Reference: https://developer.salesforce.com/docs/data/data-cloud-ref/guide/c360a-api-engagement-mobile-sdk.html
//

import Foundation

// MARK: - Event Category

/// Event categories as defined in Data Cloud schema
public enum EventCategory: String, Codable {
    case engagement = "Engagement"
    case profile = "Profile"
}

// MARK: - Data Cloud Event Protocol

/// Base protocol for all Data Cloud events
public protocol DataCloudEvent: Codable {
    /// Category of the event (Engagement or Profile)
    var category: EventCategory { get }
    
    /// Type of event (e.g., "addToFavorite", "cart", "order")
    var eventType: String { get }
    
    /// Converts the event to a dictionary for SDK transmission
    func toDictionary() -> [String: Any]
}

// MARK: - Common Event Fields

/// Fields that are auto-generated by the Salesforce SDK
/// These should NOT be provided by the app
struct AutoGeneratedFields {
    // Auto-generated by SDK:
    // - deviceId: String
    // - eventId: String (primary index)
    // - dateTime: String (ISO 8601)
    // - sessionId: String
}

// MARK: - Optional Common Fields

/// Optional location data for events
public struct LocationData: Codable {
    public let latitude: Double?
    public let longitude: Double?
    
    public init(latitude: Double? = nil, longitude: Double? = nil) {
        self.latitude = latitude
        self.longitude = longitude
    }
}

// MARK: - Helper Extensions

public extension Encodable {
    /// Converts any Encodable object to a dictionary
    func toDictionary() -> [String: Any] {
        guard let data = try? JSONEncoder().encode(self),
              let dictionary = try? JSONSerialization.jsonObject(with: data, options: .allowFragments) as? [String: Any] else {
            return [:]
        }
        return dictionary
    }
}

